# Generated by Django 5.2.2 on 2025-06-10 22:54

import cloudinary.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Personal Phone')),
                ('address', models.TextField(blank=True, max_length=100, verbose_name='Personal Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Personal City')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Personal Country')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='Personal Zip Code')),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('last_known_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Last Known IP')),
                ('location_updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Location Updated At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('role', models.IntegerField(choices=[(1, 'Restaurant'), (2, 'Provider'), (2193, 'Admin')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superadmin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=200, verbose_name='Nombre de la Empresa')),
                ('description', models.TextField(blank=True, verbose_name='Descripcion')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Corporativo')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefono')),
                ('profile_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='provider_logo')),
                ('address', models.CharField(max_length=250, verbose_name='Direccion')),
                ('city', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(max_length=100, verbose_name='Estado/Provincia')),
                ('zip_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(default='Peru', max_length=100, verbose_name='Pais')),
                ('business_type', models.CharField(choices=[(1, 'Persona Natural con Negocio'), (2, 'Sociedad'), (3, 'Corporacion'), (4, 'Cooperativa'), (5, 'Sociedad de Responsabilidad Limitada')], default=3, max_length=20)),
                ('tax_id', models.CharField(max_length=20, verbose_name='RUC')),
                ('founded_year', models.CharField(max_length=4, verbose_name='Fundation Year')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('order_updates', models.BooleanField(default=True)),
                ('marketing_emails', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('restaurant_name', models.CharField(max_length=200, verbose_name='Nombre del Restaurante')),
                ('description', models.TextField(blank=True, verbose_name='Descripcion')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Corporativo')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefono')),
                ('website', models.URLField(blank=True, verbose_name='Sitio Web')),
                ('profile_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='restaurant_logo')),
                ('address', models.CharField(max_length=250, verbose_name='Direccion')),
                ('city', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(max_length=100, verbose_name='Estado/Provincia')),
                ('zip_code', models.CharField(max_length=20, verbose_name='Codigo Postal')),
                ('country', models.CharField(default='Peru', max_length=100, verbose_name='Pais')),
                ('business_type', models.CharField(choices=[(1, 'Restaurant'), (2, 'Caffe'), (3, 'Bar'), (4, 'Fast Food'), (5, 'Food Truck')], default=1, max_length=20)),
                ('tax_id', models.CharField(max_length=20, verbose_name='RUC')),
                ('founded_year', models.CharField(max_length=4, verbose_name='Fundation Year')),
                ('capacity', models.CharField(max_length=10, verbose_name='Capacidad (personas)')),
                ('opening_hours', models.CharField(max_length=50, verbose_name='Horario de Atencion')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('order_updates', models.BooleanField(default=True)),
                ('marketing_emails', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
